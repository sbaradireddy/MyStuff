Here’s a step-by-step guide to installing Jenkins on AWS ECS with EC2:

1. Create EC2 Instance for Jenkins

	•	Launch EC2 Instance:
	•	Go to the EC2 dashboard and launch a new instance.
	•	Select Amazon Linux 2 as the AMI.
	•	Choose a t2.medium or larger instance type (Jenkins needs more resources).
	•	Configure security groups to allow inbound traffic for HTTP (port 80), HTTPS (port 443), and Jenkins (port 8080).
	•	Choose or create a new key pair to access the instance via SSH.
	•	Install Docker:
	•	SSH into your EC2 instance:

ssh -i your-key.pem ec2-user@your-ec2-ip


	•	Install Docker and start the Docker service:

sudo yum update -y
sudo amazon-linux-extras install docker
sudo service docker start
sudo usermod -a -G docker ec2-user


	•	Install Docker Compose:
	•	Install Docker Compose to manage multi-container Docker applications:

sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | grep -Po '"tag_name": "\K.*\d')" -o /usr/local/bin/docker-compose
sudo chmod +x /usr/local/bin/docker-compose



2. Set Up ECS Cluster

	•	Create ECS Cluster:
	•	In the AWS Management Console, go to ECS.
	•	Choose Create Cluster, then select the EC2 Linux + Networking option.
	•	Configure the instance settings, networking, and VPC. Ensure you enable auto-scaling and set appropriate instance types and key pairs.
	•	Register EC2 Instances with the ECS Cluster:
	•	Ensure that EC2 instances are registered with the ECS Cluster. This can be done during the cluster creation process.

3. Configure Jenkins as a Docker Container in ECS

	•	Create Task Definition:
	•	Go to the Task Definitions section in ECS and choose Create new task definition.
	•	Select the EC2 launch type and configure it to use the EC2 instances that were registered to the ECS cluster.
	•	In the Container Definitions, define the Jenkins container:

{
  "name": "jenkins",
  "image": "jenkins/jenkins:lts",
  "essential": true,
  "memory": 1024,
  "cpu": 512,
  "portMappings": [
    {
      "containerPort": 8080,
      "hostPort": 8080
    }
  ]
}


	•	Create Service:
	•	Go to the Services section of ECS and create a service using the task definition you just created.
	•	Make sure that the service runs on EC2 instances within the ECS cluster.
	•	Use the Load Balancer for Jenkins (ALB or ELB), and ensure the security group allows traffic on port 8080.

4. Access Jenkins

	•	Access Jenkins UI:
	•	You can now access the Jenkins UI by visiting http://<ec2-instance-public-ip>:8080 in a browser.
	•	Retrieve the Jenkins initial admin password:

sudo cat /var/jenkins_home/secrets/initialAdminPassword


	•	Enter the password to unlock Jenkins, then install recommended plugins.

5. Setup Jenkins (Optional)

	•	Install Plugins: After accessing Jenkins, install any necessary plugins for CI/CD pipeline management.
	•	Configure Job Execution on ECS: You can configure Jenkins to execute jobs on ECS agents by using the ECS plugin for Jenkins.

6. Secure Jenkins (Optional)

	•	Configure HTTPS for Jenkins with an SSL certificate (e.g., using Let’s Encrypt).
	•	Restrict access using security groups and IAM roles.

This setup gives you Jenkins running on AWS ECS with EC2, enabling containerized CI/CD pipelines.