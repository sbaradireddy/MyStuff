WITH LKP_REINSTATE AS (
    SELECT DISTINCT POL_PK
    FROM LKP_REINSTATE_WITH_LAPSE1
),
LKP_ADD_VEH AS (
    SELECT DISTINCT POL_PK
    FROM LKP_ADD_VEH_DUPLICATES
),
EXPTRANS1 AS (
    SELECT 
        A.POL_PK,
        A.DMV_TRANS_TYPE,
        A.ROW_STAT,
        A.POL_VRSN_TXN_TYP,
        A.REINST_TYP,
        A.POL_PK_REINSTATED_WITH_LAPSE,
        A.POL_PK_CANCEL,
        A.POL_PK_ADD_VEH,
        LKP_R.POL_PK AS REINSTATE_MATCH, -- Flag from LKP_REINSTATE_WITH_LAPSE1
        LKP_V.POL_PK AS ADD_VEH_MATCH, -- Flag from LKP_ADD_VEH_DUPLICATES
        IFF(A.DMV_TRANS_TYPE = 'NB' AND SUBSTR(A.POL_VRSN_TXN_TYP, 1, 2) != 'EN', 'N',
        IFF(A.DMV_TRANS_TYPE = 'RS' AND A.REINST_TYP = 'WITH LAPSE', 'N',
        IFF(A.DMV_TRANS_TYPE = 'CN' AND A.ROW_STAT = 'C', 'N',
        IFF(A.DMV_TRANS_TYPE = 'CN' AND A.ROW_STAT != 'C' 
             AND A.POL_PK_REINSTATED_WITH_LAPSE > 0 
             AND A.POL_PK_REINSTATED_WITH_LAPSE > A.POL_PK, 'N',
        IFF(A.DMV_TRANS_TYPE = 'RS' AND A.REINST_TYP = 'REINSTATE' 
             AND A.ROW_STAT = 'C' 
             AND COALESCE(A.POL_PK_CANCEL, 0) = 0 
             AND REINSTATE_MATCH IS NULL, 'N', -- Valid RS logic based on pre-join
        IFF(A.DMV_TRANS_TYPE = 'AV' AND A.POL_PK = A.POL_PK_ADD_VEH 
             AND ADD_VEH_MATCH IS NOT NULL, 'N', -- Valid AV logic based on pre-join
        'Y')))))) AS FILTER_OUT_IND
    FROM EXP_PRE_FILTER A
    LEFT JOIN LKP_REINSTATE LKP_R ON A.POL_PK = LKP_R.POL_PK -- Pre-computed LKP_REINSTATE_WITH_LAPSE1 join
    LEFT JOIN LKP_ADD_VEH LKP_V ON A.POL_PK = LKP_V.POL_PK -- Pre-computed LKP_ADD_VEH_DUPLICATES join
),
FILTRANS AS (
    SELECT 
        E.POL_PK,
        E.DMV_TRANS_TYPE,
        E.ROW_STAT,
        E.FILTER_OUT_IND,
        E.POL_VRSN_TXN_TYP,
        E.REINST_TYP,
        E.POL_PK_REINSTATED_WITH_LAPSE,
        E.POL_PK_CANCEL,
        E.POL_PK_ADD_VEH
    FROM EXPTRANS1 E
    WHERE E.FILTER_OUT_IND = 'N'
)
SELECT *
FROM FILTRANS;
