import msal
import requests
import boto3

# Constants for Microsoft Graph API
client_id = 'YOUR_CLIENT_ID'
client_secret = 'YOUR_CLIENT_SECRET'
tenant_id = 'YOUR_TENANT_ID'
authority = f'https://login.microsoftonline.com/{tenant_id}'
scopes = ['https://graph.microsoft.com/.default']

# Constants for AWS S3
bucket_name = 'your-s3-bucket-name'
s3 = boto3.client('s3')

# Authenticate with Microsoft Graph API
app = msal.ConfidentialClientApplication(
    client_id,
    authority=authority,
    client_credential=client_secret
)
result = app.acquire_token_for_client(scopes=scopes)

if "access_token" in result:
    access_token = result['access_token']
    
    # Fetch emails with attachments
    url = 'https://graph.microsoft.com/v1.0/me/messages?$filter=hasAttachments eq true'
    headers = {'Authorization': f'Bearer {access_token}'}
    response = requests.get(url, headers=headers)
    emails_with_attachments = response.json().get('value', [])
    
    for email in emails_with_attachments:
        email_id = email['id']
        attachments_url = f'https://graph.microsoft.com/v1.0/me/messages/{email_id}/attachments'
        response = requests.get(attachments_url, headers=headers)
        attachments = response.json().get('value', [])
        
        for attachment in attachments:
            if '@odata.type' in attachment and attachment['@odata.type'] == '#microsoft.graph.fileAttachment':
                attachment_content = attachment['contentBytes']
                attachment_name = attachment['name']
                
                # Save attachment to a file
                with open(attachment_name, 'wb') as f:
                    f.write(attachment_content.encode('utf-8'))
                
                # Upload to S3
                with open(attachment_name, 'rb') as f:
                    s3.upload_fileobj(f, bucket_name, attachment_name)
                
                print(f"Uploaded {attachment_name} to S3")
else:
    print(result.get("error"))
    print(result.get("error_description"))
    print(result.get("correlation_id"))